name: Docker

on:
  release:
    branches: [ main ]
    types:
      - created

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    defaults:
      run:
        working-directory: ./server
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to GitHub
        uses: de-vri-es/setup-git-credentials@v2
        with:
          credentials: ${{secrets.GIT_TOKEN}}

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: "npm"

      - name: Node install dependencies
        run: npm install

      - name: Node build
        run: npm run build

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"

      - name: Go get
        run: go mod download

      - name: Go build
        env:
          GOOS: linux
          GOARCH: amd64
          CGO_ENABLED: 0
        run: go build -o llg -ldflags="-X github.com/czQery/llg/tl.Build=${{ github.event.release.tag_name }}"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          logout: true

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push docker image
        id: docker_build
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}